{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courseware\\\\08.React2022\\\\react-course\\uFF081\\uFF09\\\\04_Learn_Log\\\\src\\\\components\\\\Logs\\\\LogItem\\\\LogItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyDate from \"./MyDate/MyDate\";\nimport './LogItem.css';\nimport Card from \"../../UI/Card/Card\";\nimport ConfirmModal from \"../../UI/ConfirmModal/ConfirmModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogItem = props => {\n  _s();\n\n  // 添加一个state，记录是否显示确认窗口\n  const [showConfirm, setShowConfirm] = useState(false); // 删除item的响应函数\n\n  const deleteItemHandler = () => {\n    // 显示确认窗口\n    setShowConfirm(true);\n  }; //取消函数\n\n\n  const cancelHandler = () => {\n    setShowConfirm(false);\n  }; // 确认函数\n\n\n  const okHandler = () => {\n    props.onDelLog();\n    setShowConfirm(false);\n  };\n  /*\r\n  *   portal\r\n  *       - 组件默认会作为父组件的后代渲染到页面中\r\n  *           但是有些情况下，这种方式会带来一些问题\r\n  *       - 通过portal可以将组件渲染到页面中的指定位置\r\n  *       - 使用方法：\r\n  *           1.在index.html添加一个新的元素\r\n  *           2.修改组件的渲染方式\r\n  *               - 通过ReactDOM.createPortal()作为返回值创建元素\r\n  *               - 参数：\r\n  *                   1. jsx（修改前return后的代码）\r\n  *                   2. 目标位置（DOM元素）\r\n  *\r\n  * */\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"item\",\n    children: [showConfirm && /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      confirmText: \"\\u8BE5\\u64CD\\u4F5C\\u4E0D\\u53EF\\u6062\\u590D\\uFF01\\u8BF7\\u786E\\u8BA4\",\n      onCancel: cancelHandler,\n      onOk: okHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(MyDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"desc\",\n        children: props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [props.time, \"\\u5206\\u949F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: deleteItemHandler,\n        className: \"delete\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogItem, \"07w5HhsPbG9uHJfYjLCIuUrAXBQ=\");\n\n_c = LogItem;\nexport default LogItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogItem\");","map":{"version":3,"sources":["D:/Courseware/08.React2022/react-course（1）/04_Learn_Log/src/components/Logs/LogItem/LogItem.js"],"names":["React","useState","MyDate","Card","ConfirmModal","LogItem","props","showConfirm","setShowConfirm","deleteItemHandler","cancelHandler","okHandler","onDelLog","date","desc","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C,CAHuB,CAKvB;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5B;AACAD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD,CANuB,CAWvB;;;AACA,QAAME,aAAa,GAAG,MAAM;AACxBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD,CAZuB,CAgBvB;;;AACA,QAAMG,SAAS,GAAG,MAAM;AACpBL,IAAAA,KAAK,CAACM,QAAN;AACAJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AAEH,GAJD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,eAEKD,WAAW,iBAAI,QAAC,YAAD;AACZ,MAAA,WAAW,EAAC,oEADA;AAEZ,MAAA,QAAQ,EAAEG,aAFE;AAGZ,MAAA,IAAI,EAAEC;AAHM;AAAA;AAAA;AAAA;AAAA,YAFpB,eAQI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEL,KAAK,CAACO;AAApB;AAAA;AAAA;AAAA;AAAA,YARJ,eAUI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BAKI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBAAsBP,KAAK,CAACQ;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBAAuBR,KAAK,CAACS,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAoBK;AAAA,6BACI;AAAK,QAAA,OAAO,EAAEN,iBAAd;AAAiC,QAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAhED;;GAAMJ,O;;KAAAA,O;AAmEN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport MyDate from \"./MyDate/MyDate\";\r\nimport './LogItem.css'\r\nimport Card from \"../../UI/Card/Card\";\r\nimport ConfirmModal from \"../../UI/ConfirmModal/ConfirmModal\";\r\n\r\nconst LogItem = (props) => {\r\n\r\n    // 添加一个state，记录是否显示确认窗口\r\n    const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n    // 删除item的响应函数\r\n    const deleteItemHandler = () => {\r\n        // 显示确认窗口\r\n        setShowConfirm(true);\r\n    };\r\n\r\n    //取消函数\r\n    const cancelHandler = () => {\r\n        setShowConfirm(false);\r\n    };\r\n\r\n    // 确认函数\r\n    const okHandler = () => {\r\n        props.onDelLog();\r\n        setShowConfirm(false);\r\n\r\n    };\r\n\r\n    /*\r\n    *   portal\r\n    *       - 组件默认会作为父组件的后代渲染到页面中\r\n    *           但是有些情况下，这种方式会带来一些问题\r\n    *       - 通过portal可以将组件渲染到页面中的指定位置\r\n    *       - 使用方法：\r\n    *           1.在index.html添加一个新的元素\r\n    *           2.修改组件的渲染方式\r\n    *               - 通过ReactDOM.createPortal()作为返回值创建元素\r\n    *               - 参数：\r\n    *                   1. jsx（修改前return后的代码）\r\n    *                   2. 目标位置（DOM元素）\r\n    *\r\n    * */\r\n\r\n    return (\r\n        <Card className=\"item\">\r\n\r\n            {showConfirm && <ConfirmModal\r\n                confirmText=\"该操作不可恢复！请确认\"\r\n                onCancel={cancelHandler}\r\n                onOk={okHandler}\r\n            />}\r\n\r\n            <MyDate date={props.date}/>\r\n            {/* 日志内容的容器 */}\r\n            <div className=\"content\">\r\n                {/*\r\n                  如果将组件中的数据全部写死，将会导致组件无法动态设置，不具有使用价值\r\n                    我们希望组件数据可以由外部设置，在组件间，父组件可以通过props（属性）向子组件传递数据\r\n                */}\r\n                <h2 className=\"desc\">{props.desc}</h2>\r\n                <div className=\"time\">{props.time}分钟</div>\r\n            </div>\r\n\r\n        {/*    添加一个删除按钮*/}\r\n             <div>\r\n                 <div onClick={deleteItemHandler} className='delete'>×</div>\r\n             </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default LogItem;\r\n"]},"metadata":{},"sourceType":"module"}