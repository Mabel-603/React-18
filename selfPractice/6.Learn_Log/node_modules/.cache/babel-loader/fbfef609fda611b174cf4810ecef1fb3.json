{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courseware\\\\08.React2022\\\\selfPractice\\\\6.Learn_Log\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Logs from \"./component/Logs/Logs\";\nimport LogsForm from \"./component/LogsForm/Logsform\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // 模拟一组从服务器中加载的数据\n  const [logsData, setLogsData] = useState([{\n    id: \"001\",\n    date: new Date(2021, 1, 20, 18, 30),\n    desc: \"学习九阴真经\",\n    time: 30\n  }, {\n    id: \"002\",\n    date: new Date(2022, 2, 10, 12, 30),\n    desc: \"学习书法\",\n    time: 20\n  }, {\n    id: \"003\",\n    date: new Date(2022, 2, 11, 11, 30),\n    desc: \"学习JavaScript\",\n    time: 40\n  }, {\n    id: \"004\",\n    date: new Date(2022, 2, 15, 10, 30),\n    desc: \"学习React\",\n    time: 80\n  }]);\n\n  const saveLogHandler = newLog => {\n    newLog.id = Date.now() + \"\";\n    setLogsData([...logsData, newLog]);\n  }; // const delLogHandler = (index)=>{\n  //     let newLog = [...logsData]\n  //     newLog.splice(index,1)\n  //   setLogsData(newLog)\n  // } 该删除日志的方法通过索引删除,在有过滤功能的日志中删除会出现错误,因此采用id删除的方法\n\n\n  const delLogHandlerById = id => {\n    setLogsData(prevState => {\n      return prevState.filter(item => item.id !== id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LogsForm, {\n      saveLogHandler: saveLogHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logs, {\n      logsData: logsData,\n      delLogHandler: delLogHandlerById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7Wfgn0/bRZrXLEXgmUZP9MLP1zo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Logs","LogsForm","useState","App","logsData","setLogsData","id","date","Date","desc","time","saveLogHandler","newLog","now","delLogHandlerById","prevState","filter","item"],"sources":["D:/Courseware/08.React2022/selfPractice/6.Learn_Log/src/App.js"],"sourcesContent":["import Logs from \"./component/Logs/Logs\";\r\nimport LogsForm from \"./component/LogsForm/Logsform\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  // 模拟一组从服务器中加载的数据\r\n  const [logsData, setLogsData] = useState([\r\n    {\r\n      id: \"001\",\r\n      date: new Date(2021, 1, 20, 18, 30),\r\n      desc: \"学习九阴真经\",\r\n      time: 30,\r\n    },\r\n    {\r\n      id: \"002\",\r\n      date: new Date(2022, 2, 10, 12, 30),\r\n      desc: \"学习书法\",\r\n      time: 20,\r\n    },\r\n    {\r\n      id: \"003\",\r\n      date: new Date(2022, 2, 11, 11, 30),\r\n      desc: \"学习JavaScript\",\r\n      time: 40,\r\n    },\r\n    {\r\n      id: \"004\",\r\n      date: new Date(2022, 2, 15, 10, 30),\r\n      desc: \"学习React\",\r\n      time: 80,\r\n    },\r\n  ]);\r\n  const saveLogHandler = (newLog) => {\r\n    newLog.id = Date.now() + \"\";\r\n    setLogsData([...logsData, newLog]);\r\n  };\r\n  // const delLogHandler = (index)=>{\r\n  //     let newLog = [...logsData]\r\n  //     newLog.splice(index,1)\r\n  //   setLogsData(newLog)\r\n  // } 该删除日志的方法通过索引删除,在有过滤功能的日志中删除会出现错误,因此采用id删除的方法\r\n  const delLogHandlerById = (id) => {\r\n    setLogsData((prevState) => {\r\n      return prevState.filter((item) => item.id !== id);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <LogsForm saveLogHandler={saveLogHandler} />\r\n      <Logs logsData={logsData} delLogHandler={delLogHandlerById} />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,CACvC;IACEI,EAAE,EAAE,KADN;IAEEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFR;IAGEC,IAAI,EAAE,QAHR;IAIEC,IAAI,EAAE;EAJR,CADuC,EAOvC;IACEJ,EAAE,EAAE,KADN;IAEEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,IAAI,EAAE;EAJR,CAPuC,EAavC;IACEJ,EAAE,EAAE,KADN;IAEEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFR;IAGEC,IAAI,EAAE,cAHR;IAIEC,IAAI,EAAE;EAJR,CAbuC,EAmBvC;IACEJ,EAAE,EAAE,KADN;IAEEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFR;IAGEC,IAAI,EAAE,SAHR;IAIEC,IAAI,EAAE;EAJR,CAnBuC,CAAD,CAAxC;;EA0BA,MAAMC,cAAc,GAAIC,MAAD,IAAY;IACjCA,MAAM,CAACN,EAAP,GAAYE,IAAI,CAACK,GAAL,KAAa,EAAzB;IACAR,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,MAAd,CAAD,CAAX;EACD,CAHD,CA5BgB,CAgChB;EACA;EACA;EACA;EACA;;;EACA,MAAME,iBAAiB,GAAIR,EAAD,IAAQ;IAChCD,WAAW,CAAEU,SAAD,IAAe;MACzB,OAAOA,SAAS,CAACC,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAAvC,CAAP;IACD,CAFU,CAAX;EAGD,CAJD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,cAAc,EAAEK;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,QAAQ,EAAEP,QAAhB;MAA0B,aAAa,EAAEU;IAAzC;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAhDD;;GAAMX,G;;KAAAA,G;AAiDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}